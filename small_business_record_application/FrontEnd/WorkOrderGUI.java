/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BoothsGarage;

import static BoothsGarage.DBmethods.*;
import static BoothsGarage.LoginGUI.*;
import static java.lang.Integer.parseInt;
import java.sql.*;
import java.util.logging.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel Hayes
 */
public class WorkOrderGUI extends javax.swing.JFrame {

    /**
     * Creates new form WorkOrderGUI
     */
    public WorkOrderGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtJobNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCustomerRef = new javax.swing.JTextField();
        txtJobDescription = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtGarageName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNetTotal = new javax.swing.JTextField();
        txtVat = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnMenu = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnAddOrder = new javax.swing.JButton();
        txtStaffRef = new javax.swing.JTextField();
        btnSearchStaff = new javax.swing.JButton();
        btnShowLineItems = new javax.swing.JButton();
        btnAddLineItems = new javax.swing.JButton();
        btnUpdateOrder = new javax.swing.JButton();
        btnDeleteOrder = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        comboCompDay = new javax.swing.JComboBox<>();
        comboCompMonth = new javax.swing.JComboBox<>();
        comboCompYear = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 20));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Work Order");

        jLabel2.setText("Job Number");

        jLabel3.setText("Customer Ref.");

        jLabel4.setText("Staff Ref.");

        jLabel5.setText("Job Description");

        jLabel6.setText("Completion Date");

        jLabel7.setText("Garage Name");

        txtNetTotal.setEditable(false);

        txtVat.setEditable(false);

        txtTotal.setEditable(false);

        jLabel8.setText("Net Total");

        jLabel9.setText("VAT");

        jLabel10.setText("Total");

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAddOrder.setText("Add Order");
        btnAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderActionPerformed(evt);
            }
        });

        btnSearchStaff.setText("Search");
        btnSearchStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchStaffActionPerformed(evt);
            }
        });

        btnShowLineItems.setText("Show Line Items");
        btnShowLineItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowLineItemsActionPerformed(evt);
            }
        });

        btnAddLineItems.setText("Add Line Items");
        btnAddLineItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLineItemsActionPerformed(evt);
            }
        });

        btnUpdateOrder.setText("Update Order");
        btnUpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOrderActionPerformed(evt);
            }
        });

        btnDeleteOrder.setText("Delete Order");
        btnDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        comboCompDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        comboCompMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        comboCompYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2015", "2016", "2017", "2018", "2019", "2020" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtVat)
                            .addComponent(txtNetTotal)
                            .addComponent(txtGarageName)
                            .addComponent(txtJobDescription)
                            .addComponent(txtCustomerRef)
                            .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtStaffRef, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchStaff))
                            .addComponent(txtJobNumber)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboCompDay, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCompMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCompYear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAddOrder, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnShowLineItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdateOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddLineItems, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(btnDeleteOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(146, 146, 146))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtJobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomerRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtStaffRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchStaff))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJobDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboCompMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboCompYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboCompDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGarageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnShowLineItems)
                    .addComponent(btnAddLineItems)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddOrder)
                    .addComponent(btnUpdateOrder)
                    .addComponent(btnDeleteOrder)
                    .addComponent(btnMenu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        dispose();
        MenuGUI menu = new MenuGUI();
        menu.setVisible(true);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String job_no = txtJobNumber.getText();
        String cust_no = "";
        String staff_no = "";
        String job_desc = "";
        String comp_date = "";
        String garage_name = "";
        String net_total = "";
        String vat = "";
        String total = "";
        Connection dbConnection = null;
        Statement statement = null;
        ResultSet resultset = null;
        String lock = "LOCK TABLE sys.work_order IN EXCLUSIVE MODE NOWAIT";
        String query = "SELECT * FROM sys.work_order WHERE job_no IN " + job_no;
        try {
            dbConnection = getDBConnection();
            statement = dbConnection.createStatement();
            statement.executeUpdate(lock);
            System.out.println(lock);
            resultset = statement.executeQuery(query);
            System.out.println(query);
            while (resultset.next()) {
                cust_no = resultset.getString("cust_no");
                staff_no = resultset.getString("staff_no");
                job_desc = resultset.getString("job_desc");
                comp_date = resultset.getString("comp_date");
                garage_name = resultset.getString("garage_name");
                net_total = resultset.getString("net_total");
                vat = resultset.getString("vat");
                total = resultset.getString("total");
            }
            statement.executeUpdate("COMMIT");
            System.out.println("COMMIT");
            txtCustomerRef.setText(cust_no);
            txtStaffRef.setText(staff_no);
            txtJobDescription.setText(job_desc);
            if(comp_date == null){
                comboCompDay.setSelectedIndex(0);
                comboCompMonth.setSelectedIndex(0);
                comboCompYear.setSelectedIndex(0);
            }else{
                String[] cdate = comp_date.split("-");
                int cyear = parseInt(cdate[0]);
                cyear -=2014;
                int cmonth = parseInt(cdate[1]);
                String[] cdayString = cdate[2].split(" ");
                int cday = parseInt(cdayString[0]);
                comboCompDay.setSelectedIndex(cday);
                comboCompMonth.setSelectedIndex(cmonth);
                comboCompYear.setSelectedIndex(cyear);
            }
            txtGarageName.setText(garage_name);
            txtNetTotal.setText(net_total);
            txtVat.setText(vat);
            txtTotal.setText(total);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (resultset != null) {
                        resultset.close();
                    }
                if (statement != null) {
                    statement.close();
                }
                if (dbConnection != null) {
                    dbConnection.close();
                }
            } catch (SQLException ex) {
                Logger.getLogger(WorkOrderGUI.class.getName())
                        .log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddLineItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLineItemsActionPerformed
        String job_no = txtJobNumber.getText();
        String where = "job_no IN ('" + job_no + "')";
        String jobExists = "0";
        try {
            jobExists = countWhere("work_order", where);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
        if(jobExists.equalsIgnoreCase("0")){
            JOptionPane.showMessageDialog(null, "Work order not recognised", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            lig.dispose();
            lig = new LineItemsGUI(job_no);
            lig.setVisible(true); 
        }
        String whereLI = job_no + " in job_no";
        try {
            searchWhereLI("line_item", whereLI);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddLineItemsActionPerformed

    private void btnShowLineItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowLineItemsActionPerformed
        sr.dispose();
        sr = new SearchResults();
        String job_no = txtJobNumber.getText();
        String where = job_no + " in job_no";
        try {
            searchWhere("line_item", where);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
        sr.setVisible(true);
    }//GEN-LAST:event_btnShowLineItemsActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtJobNumber.setText("");
        txtCustomerRef.setText("");
        txtStaffRef.setText("");
        txtJobDescription.setText("");
        comboCompDay.setSelectedIndex(0);
        comboCompMonth.setSelectedIndex(0);
        comboCompYear.setSelectedIndex(0);
        txtGarageName.setText("");
        txtNetTotal.setText("");
        txtVat.setText("");
        txtTotal.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderActionPerformed
        String entities = "job_no, cust_no, staff_no, job_desc, comp_date, "
                + "garage_name, net_total, vat, total";
        String job_no = txtJobNumber.getText();
        String cust_no = txtCustomerRef.getText();
        String staff_no = txtStaffRef.getText();
        String job_desc = txtJobDescription.getText();
        String comp_date = "";
        if(comboCompDay.getSelectedIndex() == 0 
                && comboCompMonth.getSelectedIndex() == 0 
                && comboCompYear.getSelectedIndex() == 0){
            comp_date = "''";
        }else if(comboCompDay.getSelectedIndex() == 0 
                || comboCompMonth.getSelectedIndex() == 0 
                || comboCompYear.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Incomplete date of birth "
                    + "entered", "Input Error", 
                    JOptionPane.ERROR_MESSAGE);
        }else{
            comp_date = "TO_DATE ('" + comboCompDay.getSelectedItem().toString()
                    + "-" + comboCompMonth.getSelectedItem().toString() + "-" 
                    + comboCompYear.getSelectedItem().toString() + "')";
        }
        String garage_name = txtGarageName.getText();
        String net_total = txtNetTotal.getText();
        String vat = txtVat.getText();
        String total = txtTotal.getText();
        WorkOrder w1 = new WorkOrder(job_no, cust_no, staff_no, job_desc, 
                comp_date, garage_name, net_total, vat, total);
        String values = w1.toString();
        try {
            DBmethods.insertRecord("work_order", entities, values);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddOrderActionPerformed

    private void btnUpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOrderActionPerformed
        String where = "job_no = " + txtJobNumber.getText();
        String cust_no = txtCustomerRef.getText();
        String staff_no = txtStaffRef.getText();
        String job_desc = txtJobDescription.getText();
        String comp_date = "";
        if(comboCompDay.getSelectedIndex() == 0 
                && comboCompMonth.getSelectedIndex() == 0 
                && comboCompYear.getSelectedIndex() == 0){
            comp_date = "''";
        }else if(comboCompDay.getSelectedIndex() == 0 
                || comboCompMonth.getSelectedIndex() == 0 
                || comboCompYear.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Incomplete completion date "
                    + "entered", "Input Error", 
                    JOptionPane.ERROR_MESSAGE);
        }else{
            comp_date = "TO_DATE ('" + comboCompDay.getSelectedItem().toString()
                    + "-" + comboCompMonth.getSelectedItem().toString() + "-" 
                    + comboCompYear.getSelectedItem().toString() + "')";
        }
        String garage_name = txtGarageName.getText();
        String net_total = txtNetTotal.getText();
        String vat = txtVat.getText();
        String total = txtTotal.getText();
        String set = "";
        set += "cust_no = '" + cust_no + "'";
        set += ", staff_no = '" + staff_no + "'";
        set += ", job_desc = '" + job_desc + "'";
        set += ", comp_date = " + comp_date;
        set += ", garage_name = '" + garage_name + "'";
        set += ", net_total = '" + net_total + "'";
        set += ", vat = '" + vat + "'";
        set += ", total = '" + total + "'";
        try {
            updateStringRecord("work_order", set, where);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateOrderActionPerformed

    private void btnDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderActionPerformed
        String where = "job_no = " + txtJobNumber.getText();
        try {
            deleteRecord("work_order", where);
            txtJobNumber.setText("");
            txtCustomerRef.setText("");
            txtStaffRef.setText("");
            txtJobDescription.setText("");
            comboCompDay.setSelectedIndex(0);
            comboCompMonth.setSelectedIndex(0);
            comboCompYear.setSelectedIndex(0);
            txtGarageName.setText("");
            txtNetTotal.setText("");
            txtVat.setText("");
            txtTotal.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteOrderActionPerformed

    private void btnSearchStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchStaffActionPerformed
        sr.dispose();
        sr = new SearchResults();
        try {
            searchFullTable("staff_details_view");
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
        sr.setVisible(true);
    }//GEN-LAST:event_btnSearchStaffActionPerformed
    
    public static void updateCostView(String n, String v, String t, 
            String job_no){
        String where = "job_no = " + job_no;
        String set = "";
        set += "net_total = '" + n + "'";
        set += ", vat = '" + v + "'";
        set += ", total = '" + t + "'";
        try {
            updateStringRecord("work_order", set, where);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerGUI.class.getName())
                    .log(Level.SEVERE, null, ex);
        }
        String net_total = "";
        String vat = "";
        String total = "";
        Connection dbConnection = null;
        Statement statement = null;
        ResultSet resultset = null;
        String lock = "LOCK TABLE sys.work_order IN EXCLUSIVE MODE NOWAIT";
        String query = "SELECT * FROM sys.work_order WHERE job_no IN " + job_no;
        try {
            dbConnection = getDBConnection();
            statement = dbConnection.createStatement();
            statement.executeUpdate(lock);
            System.out.println(lock);
            resultset = statement.executeQuery(query);
            System.out.println(query);
            while (resultset.next()) {
                net_total = resultset.getString("net_total");
                vat = resultset.getString("vat");
                total = resultset.getString("total");
            }
            statement.executeUpdate("COMMIT");
            System.out.println("COMMIT");
            txtNetTotal.setText(net_total);
            txtVat.setText(vat);
            txtTotal.setText(total);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (resultset != null) {
                        resultset.close();
                    }
                if (statement != null) {
                    statement.close();
                }
                if (dbConnection != null) {
                    dbConnection.close();
                }
            } catch (SQLException ex) {
                Logger.getLogger(WorkOrderGUI.class.getName())
                        .log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void setCustRef(String customerRef){
        txtCustomerRef.setText(customerRef);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WorkOrderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WorkOrderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WorkOrderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WorkOrderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new WorkOrderGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLineItems;
    private javax.swing.JButton btnAddOrder;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchStaff;
    private javax.swing.JButton btnShowLineItems;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JComboBox<String> comboCompDay;
    private javax.swing.JComboBox<String> comboCompMonth;
    private javax.swing.JComboBox<String> comboCompYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCustomerRef;
    private javax.swing.JTextField txtGarageName;
    private javax.swing.JTextField txtJobDescription;
    private javax.swing.JTextField txtJobNumber;
    private static javax.swing.JTextField txtNetTotal;
    private javax.swing.JTextField txtStaffRef;
    private static javax.swing.JTextField txtTotal;
    private static javax.swing.JTextField txtVat;
    // End of variables declaration//GEN-END:variables
}
